// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  name        String
  email       String   @unique
  password    String
  role        Role
  orders      Order[]
  createde_at DateTime @default(now())
  updatede_at DateTime @updatedAt
  cart        Cart?

  @@map("users")
}

enum Role {
  admin
  client
}

model Order {
  id       Int            @id @default(autoincrement())
  user     User           @relation(fields: [userId], references: [id])
  userId   Int
  products ProductOrder[]
  total    Decimal
  coupon   Coupon?        @relation(fields: [couponId], references: [id])
  couponId Int?

  @@map("orders")
}

model Coupon {
  id          Int     @id @default(autoincrement())
  name        String
  Order       Order[]
  description String
  discount    Decimal

  @@map("coupons")
}

model Product {
  id          Int            @id @default(autoincrement())
  name        String
  description String         @db.Text
  price       Decimal
  categories  Category[]
  inventory   Int            @db.UnsignedInt
  images      ProductImage[]
  orders      ProductOrder[]
  carts       ProductCart[]

  @@map("products")
}

model ProductOrder {
  quantity  Int
  discount  Decimal?
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int

  @@id([orderId, productId])
  @@map("productOders")
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  products    Product[]

  @@map("categories")
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  filename      String  @unique
  product   Product @relation(fields: [productId], references: [id])
  productId Int

  @@map("productImages")
}

model Cart {
  id          Int           @id @default(autoincrement())
  user        User          @relation(fields: [userId], references: [id])
  userId      Int           @unique
  products    ProductCart[]
  createde_at DateTime      @default(now())
  updatede_at DateTime      @updatedAt

  @@map("carts")
}

model ProductCart {
  id        Int     @id @default(autoincrement())
  quantity  Int
  productId Int
  cartId    Int
  product   Product @relation(fields: [productId], references: [id])
  cart      Cart    @relation(fields: [cartId], references: [id])
}
